spring.application.name=${SPRING_APP_NAME:oc-chatop-backend}

## Configuration de la base de données

# Configuration de la chaine de connexion à la base de données
spring.datasource.url = jdbc:mysql://${MYSQL_HOSTNAME:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:chatop_db}?useSSL=false&serverTimezone=UTC
# Configuration de l'utilisateur de la base de données
spring.datasource.username = ${MYSQL_USER:user}
# Configuration du mot de passe de la base de données
spring.datasource.password = ${MYSQL_PASSWORD:user_password}

## Configuration de JPA

# Affiche les requêtes SQL dans la console
spring.jpa.show-sql = true

## Configuration de Hibernate

# Configuration du mode de génération de la base de données
spring.jpa.hibernate.ddl-auto=update

# Configuration du dialecte de la base de données
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect

# Formate les requêtes SQL dans la console
spring.jpa.properties.hibernate.format_sql = true

## Configuration de Swagger

# Pour choisir le chemin amenant à la documentation Swagger, on peut changer cette propriété
springdoc.api-docs.path=/api-docs


## Pour activer et choisir le niveau de logging de spring security, on peut utiliser cette propriété
logging.level.org.springframework.security = ${SPRING_SECURITY_LOG_LEVEL:TRACE}

## Configuration du logging

# Pour changer le pattern de logging de la console, on peut utiliser cette propriété
logging.pattern.console = ${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}

## Configuration de l'application
server.port = ${SPRING_SERVER_PORT:3001}

chatop.app.jwtSecret = ${CHATOP_JWT_SECRET:2fda3cb2c5f2d942e05874804adc7626f2bc21dcc89c3d39bdba877155463af3}
chatop.app.jwtExpirationMs = ${CHATOP_JWT_EXPIRATION_MS:3600000}